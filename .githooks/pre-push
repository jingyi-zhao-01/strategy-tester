#!/usr/bin/env bash
set -euo pipefail

ROOT=$(git rev-parse --show-toplevel)
cd "$ROOT"

echo "[pre-push] Running tests with coverage..."

python - "$@" <<'PY'
import sys, shutil
if shutil.which("pytest") is None:
    print("pytest not found. Please install dev dependencies (e.g., pip install -r requirements.txt). Blocking push.", file=sys.stderr)
    sys.exit(1)
PY

# Run pytest with coverage reports
pytest --maxfail=1 --disable-warnings -q \
  --cov=options --cov=lib \
  --cov-report=term --cov-report=xml:coverage.xml

# Parse total line-rate from coverage.xml (0.00 - 1.00)
if [ ! -f coverage.xml ]; then
  echo "[pre-push] coverage.xml not generated; blocking push"
  exit 1
fi
rate=$(grep -o 'line-rate="[^"]*"' coverage.xml | head -n1 | sed -E 's/.*line-rate="([^"]*)".*/\1/')
if [ -z "$rate" ]; then
  echo "[pre-push] Could not parse coverage rate; blocking push"
  exit 1
fi
pct=$(python - "$rate" <<'PY'
import sys
print(int(float(sys.argv[1]) * 100))
PY
)

threshold=${COVERAGE_THRESHOLD:-60}
if [ "$pct" -lt "$threshold" ]; then
  echo "[pre-push] Coverage ${pct}% is below threshold ${threshold}%. Blocking push."
  exit 1
fi

echo "[pre-push] Coverage ${pct}% >= ${threshold}%. Allowing push."
exit 0
