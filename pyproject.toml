[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


[project]
name = "strategy-tester"
version = "0.1.0"
description = ""
authors = [
    {name = "Jingyi Zhao",email = "zhao.elton@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "httpx (==0.28.1)",
    "polygon-api-client (==1.15.1)",
    "prisma (==0.15.0)",
    "pytz (==2025.2)",
    "python-dotenv (==1.1.1)",
    "opentelemetry-distro (>=0.57b0,<0.58)",
    "opentelemetry-exporter-otlp (>=1.36.0,<2.0.0)",
    "opentelemetry-instrumentation-requests (>=0.57b0,<0.58)",
    "opentelemetry-instrumentation-httpx (>=0.57b0,<0.58)",
    "opentelemetry-exporter-otlp-proto-grpc (>=1.36.0,<2.0.0)",
    "pyqlib (>=0.9.7,<0.10.0)",
    "opentelemetry-instrumentation-system-metrics (>=0.57b0,<0.58)"
]


[tool.black]
line-length = 100


[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "D", "UP", "B", "C4", "T20", "SIM", "PL"]
ignore = ["D100", "D101", "D102", "D103", "D107", "D203", "D213"]


[tool.pyright]
typeCheckingMode = "basic"
pythonVersion = "3.12"
include = ["."]
exclude = ["__pycache__", "build", "dist", "options/tests"]
extraPaths = ["typings"]
stubPath = "typings"
reportMissingModuleSource = "none"

[tool.poetry]
name = "strategy-tester"
version = "0.1.0"
description = ""
authors = ["Jingyi Zhao <zhao.elton@gmail.com>"]
readme = "README.md"
packages = [{ include = "options" }, { include = "lib" }]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
httpx = "0.28.1"
polygon-api-client = "1.15.1"
prisma = "0.15.0"
pytz = "2025.2"
python-dotenv = "1.1.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-cov = "6.2.1"
pytest-asyncio = "1.1.0"
ruff = "^0.12.8"

[tool.poetry.scripts]
update_options = "cli.run:main"

[tool.coverage.run]
relative_files = true
source = ["options", "lib"]
branch = true

